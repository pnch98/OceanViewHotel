// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OceanViewHotel.Data;

#nullable disable

namespace OceanViewHotel.Migrations
{
    [DbContext(typeof(OceanViewHotelContext))]
    [Migration("20240308122426_Pensioni")]
    partial class Pensioni
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OceanViewHotel.Models.Camera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdTipologiaCamera")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTipologiaCamera");

                    b.ToTable("Camere");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cellulare")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Citta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodiceFiscale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clienti");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Dipendente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dipendenti");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Pensione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pensioni");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Prenotazione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Caparra")
                        .HasColumnType("float");

                    b.Property<DateOnly>("DataCheckIn")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataCheckOut")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataPrenotazione")
                        .HasColumnType("date");

                    b.Property<int>("IdCamera")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPensione")
                        .HasColumnType("int");

                    b.Property<double>("Tariffa")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCamera");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPensione");

                    b.ToTable("Prenotazioni");
                });

            modelBuilder.Entity("OceanViewHotel.Models.ServPerPren", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ServPerPrenList");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Servizio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataServizio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrenotazione")
                        .HasColumnType("int");

                    b.Property<int>("IdServizio")
                        .HasColumnType("int");

                    b.Property<int>("ServPerPrenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPrenotazione");

                    b.HasIndex("ServPerPrenId");

                    b.ToTable("Servizi");
                });

            modelBuilder.Entity("OceanViewHotel.Models.TipologiaCamera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipologiaCamera");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Camera", b =>
                {
                    b.HasOne("OceanViewHotel.Models.TipologiaCamera", "TipologiaCamera")
                        .WithMany("Camere")
                        .HasForeignKey("IdTipologiaCamera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipologiaCamera");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Prenotazione", b =>
                {
                    b.HasOne("OceanViewHotel.Models.Camera", "Camera")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdCamera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanViewHotel.Models.Cliente", "Cliente")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanViewHotel.Models.Pensione", "Pensione")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("IdPensione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Camera");

                    b.Navigation("Cliente");

                    b.Navigation("Pensione");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Servizio", b =>
                {
                    b.HasOne("OceanViewHotel.Models.Prenotazione", "Prenotazione")
                        .WithMany("Servizi")
                        .HasForeignKey("IdPrenotazione")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OceanViewHotel.Models.ServPerPren", "ServPerPren")
                        .WithMany("Servizi")
                        .HasForeignKey("ServPerPrenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prenotazione");

                    b.Navigation("ServPerPren");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Camera", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Cliente", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Pensione", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("OceanViewHotel.Models.Prenotazione", b =>
                {
                    b.Navigation("Servizi");
                });

            modelBuilder.Entity("OceanViewHotel.Models.ServPerPren", b =>
                {
                    b.Navigation("Servizi");
                });

            modelBuilder.Entity("OceanViewHotel.Models.TipologiaCamera", b =>
                {
                    b.Navigation("Camere");
                });
#pragma warning restore 612, 618
        }
    }
}
